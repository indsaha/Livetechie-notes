Merge(L,R,A)
{
	nL,nR //length of the lists
	while(i<nL && j<nR)
	{
		if(L[i]<= R[j])
		{
			A[k]=L[i]
			i=i+1
		}
		else
		{
			A[k]=R[j]
			j=j+1
		}
		k= k+1
	}
	while(i<nL)
	{
		A[k] = L[i]
		i = i+1
		k = k+1
	}
	while(j<nR)
	{
		A[k] = R[j]
		j = j+1
		k = k+1
	}
}

merge_Sort(A)
{
	int n //length of the List
	if(n<2)
		return 
	mid=n/2
	int left[]
	int right[]
	for i=0 to mid-1
		left[i] = A[i]
	for i= mid to (n-1)
		right[i-mid] = A[i]
	merge_Sort(Left)
	merge_Sort(Right)
	merge(Left,Right,A)
}